{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/content-service.service\";\nimport * as i2 from \"../services/message.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/forms\";\nexport let CreateComponent = /*#__PURE__*/(() => {\n  class CreateComponent {\n    constructor(contentService, messageService, dialog) {\n      this.contentService = contentService;\n      this.messageService = messageService;\n      this.dialog = dialog;\n      this.addContentEvent = new EventEmitter();\n      this.updateContentEvent = new EventEmitter();\n      this.newContent = {\n        author: '',\n        title: '',\n        body: ''\n      };\n    }\n\n    ngOnInit() {}\n\n    openDialog() {\n      const dialogRef = this.dialog.open(CreateDialogComponent, {\n        width: '400px',\n        data: this.newContent\n      });\n      dialogRef.afterClosed().subscribe(newContentFromDialog => {\n        console.log('The dialog was closed');\n        console.log(\"what's the id really?:\", newContentFromDialog.id);\n\n        if (isNaN(newContentFromDialog.id)) {\n          this.addContentEvent.emit(newContentFromDialog);\n        } else {\n          // the id must have had a value in it\n          this.updateContentEvent.emit(newContentFromDialog);\n        }\n\n        this.newContent = {\n          author: '',\n          title: '',\n          body: ''\n        };\n      });\n    }\n\n  }\n\n  CreateComponent.ɵfac = function CreateComponent_Factory(t) {\n    return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.ContentServiceService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n\n  CreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateComponent,\n    selectors: [[\"app-create\"]],\n    outputs: {\n      addContentEvent: \"addContentEvent\",\n      updateContentEvent: \"updateContentEvent\"\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function CreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function CreateComponent_Template_button_click_0_listener() {\n          return ctx.openDialog();\n        });\n        i0.ɵɵtext(1, \"Create Content\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i4.MatButton],\n    styles: [\"\"]\n  });\n  return CreateComponent;\n})();\nexport let CreateDialogComponent = /*#__PURE__*/(() => {\n  class CreateDialogComponent {\n    constructor(dialogRef, data, contentService, messageService) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.contentService = contentService;\n      this.messageService = messageService;\n    }\n\n    addCoconut() {\n      this.data.tags = this.tempTags.split(\",\");\n      this.contentService.postContent(this.data).subscribe(newCoconut => {\n        this.messageService.addMessage(\"Added content has an id of: \" + newCoconut.id);\n        this.data = {\n          author: '',\n          title: '',\n          body: ''\n        };\n        this.tempTags = \"\";\n      });\n    }\n\n    updateCoconut() {\n      this.data.tags = this.tempTags.split(\",\");\n      this.data.id = parseInt(this.tempId);\n      this.dialogRef.close(this.data);\n      this.contentService.postContent(this.data).subscribe(() => {\n        this.messageService.addMessage(\"Updated content at id: \" + this.data.id);\n        this.tempTags = \"\";\n        this.tempId = \"\"; // this.updateContentEvent.emit(this.data);\n        // this.data = {\n        //   author: '',\n        //   title: '',\n        //   body: ''\n        // };\n      });\n    }\n\n    onNoClick() {\n      this.dialogRef.close();\n    }\n\n  }\n\n  CreateDialogComponent.ɵfac = function CreateDialogComponent_Factory(t) {\n    return new (t || CreateDialogComponent)(i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.ContentServiceService), i0.ɵɵdirectiveInject(i2.MessageService));\n  };\n\n  CreateDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateDialogComponent,\n    selectors: [[\"crete-dialog-component\"]],\n    decls: 40,\n    vars: 8,\n    consts: [[\"appearance\", \"fill\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"mat-dialog-close\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"]],\n    template: function CreateDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(2, \"mat-label\");\n        i0.ɵɵtext(3, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateDialogComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.tempId = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\");\n        i0.ɵɵelementStart(6, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateDialogComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.data.author = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\");\n        i0.ɵɵelementStart(11, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Image URL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateDialogComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.data.imgUrl = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\");\n        i0.ɵɵelementStart(16, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateDialogComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.data.type = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\");\n        i0.ɵɵelementStart(21, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateDialogComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.data.title = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\");\n        i0.ɵɵelementStart(26, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(27, \"mat-label\");\n        i0.ɵɵtext(28, \"Body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateDialogComponent_Template_input_ngModelChange_29_listener($event) {\n          return ctx.data.body = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\");\n        i0.ɵɵelementStart(31, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(32, \"mat-label\");\n        i0.ɵɵtext(33, \"Tags\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateDialogComponent_Template_input_ngModelChange_34_listener($event) {\n          return ctx.tempTags = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\");\n        i0.ɵɵelementStart(36, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function CreateDialogComponent_Template_button_click_36_listener() {\n          return ctx.addCoconut();\n        });\n        i0.ɵɵtext(37, \"Add Song\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function CreateDialogComponent_Template_button_click_38_listener() {\n          return ctx.updateCoconut();\n        });\n        i0.ɵɵtext(39, \"Update Song\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.tempId);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.data.author);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.data.imgUrl);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.data.type);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.data.title);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.data.body);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.tempTags);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mat-dialog-close\", ctx.data);\n      }\n    },\n    directives: [i5.MatFormField, i5.MatLabel, i6.MatInput, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgModel, i4.MatButton, i3.MatDialogClose],\n    encapsulation: 2\n  });\n  return CreateDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}