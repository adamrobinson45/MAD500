{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/content-service.service\";\nimport * as i2 from \"../create/create.component\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../content-card/content-card.component\";\nimport * as i9 from \"../hover-card.directive\";\n\nfunction ContentListComponent_app_content_card_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-content-card\", 8);\n  }\n\n  if (rf & 2) {\n    const song_r2 = ctx.$implicit;\n    const isLast_r3 = ctx.last;\n    const isFirst_r4 = ctx.first;\n    i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(6);\n\n    i0.ɵɵclassProp(\"is-last\", isLast_r3)(\"highlight-me\", _r0.value === song_r2.title);\n    i0.ɵɵproperty(\"borderVisible\", isLast_r3 || isFirst_r4)(\"song\", song_r2);\n  }\n}\n\nexport let ContentListComponent = /*#__PURE__*/(() => {\n  class ContentListComponent {\n    constructor(contentService) {\n      this.contentService = contentService;\n      this.musicList = [];\n    }\n\n    ngOnInit() {\n      this.getContent();\n    }\n\n    getContent() {\n      this.contentService.getContent().subscribe(contentList => {\n        this.musicList = contentList;\n      });\n    }\n\n    checkIfTitleExists(title) {\n      //do my check if the title exists\n      // console.log(title);\n      // this.message = \"Song not found\";\n      // for (let i = 0; i < this.musicList.length; i++) {\n      //   if (this.musicList[i].title === title) {\n      //     this.message = \"Found your song!\";\n      //     break;\n      //   }\n      // }\n      let filter = this.musicList.filter(song => song.title === title);\n\n      if (filter.length > 0) {\n        this.message = \"Song found\";\n      } else {\n        this.message = \"No song found with that title\";\n      }\n\n      console.log(\"spread operator\", ...this.musicList);\n      console.log(\"Just the array\", this.musicList);\n      this.musicList = [...this.musicList];\n    }\n\n    addContentToList(newCoconut) {\n      console.log(\"new coconut from the list\", newCoconut);\n      this.musicList.push(newCoconut);\n      this.musicList = [...this.musicList]; // this.getContent();\n    }\n\n    updateContentToList(newCoconut) {\n      console.log(\"updated coconut from the list\", newCoconut);\n      let songIndex = this.musicList.map(e => e.id).indexOf(newCoconut.id);\n      this.musicList[songIndex] = newCoconut;\n      this.musicList = [...this.musicList]; // this.getContent();\n    }\n\n  }\n\n  ContentListComponent.ɵfac = function ContentListComponent_Factory(t) {\n    return new (t || ContentListComponent)(i0.ɵɵdirectiveInject(i1.ContentServiceService));\n  };\n\n  ContentListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContentListComponent,\n    selectors: [[\"app-content-list\"]],\n    decls: 12,\n    vars: 2,\n    consts: [[3, \"addContentEvent\", \"updateContentEvent\"], [\"onsubmit\", \"return false;\"], [\"appearance\", \"fill\"], [\"matInput\", \"\"], [\"checkTitle\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"click\"], [1, \"title-check\"], [\"appHoverCard\", \"\", 3, \"borderVisible\", \"is-last\", \"song\", \"highlight-me\", 4, \"ngFor\", \"ngForOf\"], [\"appHoverCard\", \"\", 3, \"borderVisible\", \"song\"]],\n    template: function ContentListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"app-create\", 0);\n        i0.ɵɵlistener(\"addContentEvent\", function ContentListComponent_Template_app_create_addContentEvent_0_listener($event) {\n          return ctx.addContentToList($event);\n        })(\"updateContentEvent\", function ContentListComponent_Template_app_create_updateContentEvent_0_listener($event) {\n          return ctx.updateContentToList($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelementStart(2, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Enter Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3, 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function ContentListComponent_Template_button_click_7_listener() {\n          i0.ɵɵrestoreView(_r5);\n\n          const _r0 = i0.ɵɵreference(6);\n\n          return ctx.checkIfTitleExists(_r0.value);\n        });\n        i0.ɵɵtext(8, \"Does it exist?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, ContentListComponent_app_content_card_11_Template, 1, 6, \"app-content-card\", 7);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate1(\" \", ctx.message, \"\\n\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.musicList);\n      }\n    },\n    directives: [i2.CreateComponent, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.MatButton, i7.NgForOf, i8.ContentCardComponent, i9.HoverCardDirective],\n    styles: [\"\"]\n  });\n  return ContentListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}